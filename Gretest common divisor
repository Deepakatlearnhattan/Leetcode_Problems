#include <iostream>
#include <string>
#include <algorithm>

using namespace std;

class Solution {
public:
    
    int gcd(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }

    
    bool canFormByRepeating(const string& str, const string& pattern) {
        int len = str.length() / pattern.length();
        string repeated = "";
        for (int i = 0; i < len; ++i) {
            repeated += pattern;
        }
        return repeated == str;
    }

    string gcdOfStrings(string str1, string str2) {
        
        int gcdLength = gcd(str1.length(), str2.length());

     
        string candidate = str1.substr(0, gcdLength);

        if (canFormByRepeating(str1, candidate) && canFormByRepeating(str2, candidate)) {
            return candidate;
        }

        return "";
    }
};

